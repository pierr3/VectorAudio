name: Release Vector Audio

on:
  release:
    types: [published]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  BUILD_TYPE: Release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set env (release)
        if: github.event.release.prerelease == false
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set env (pre-release)
        if: github.event.release.prerelease == true
        run: |
          echo "RELEASE_VERSION=v`cat VERSION_BETA`" >> $GITHUB_ENV
          cat VERSION_BETA > VERSION
      - name: Install SFML dependencies
        run: |
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install libx11-dev libxrandr-dev libxi-dev libudev-dev libgl1-mesa-dev libxcursor-dev freeglut3-dev pkg-config desktop-file-utils libfuse2 cmake ninja build-essentials
          sudo apt-get upgrade
      - name: Configure cmake
        run: |
          cmake -S . -B build/ -DVCPKG_BUILD_TYPE=release -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      - name: Build cmake
        run: |
          cmake --build build/ --config ${{ env.BUILD_TYPE }}
      - name: Bundle Linux
        run: |
          ./bundle_linux.sh libafv_native.so
      - name: Rename installer
        run: |
          mv VectorAudio-x86_64.AppImage VectorAudio-${{ github.ref_name }}-x86_64.AppImage
          mv VectorAudio-x86_64.AppImage.zsync VectorAudio-${{ github.ref_name }}-x86_64.AppImage.zsync
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            VectorAudio-${{ github.ref_name }}-x86_64.AppImage
            VectorAudio-${{ github.ref_name }}-x86_64.AppImage.zsync
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set env (release)
        if: github.event.release.prerelease == false
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $env:GITHUB_ENV
      - name: Set env (pre-release)
        if: github.event.release.prerelease == true
        run: |
          $ver = Get-Content .\VERSION_BETA -Raw
          echo "Found beta release version: $ver"
          echo "RELEASE_VERSION=v$ver" >> $env:GITHUB_ENV
          cat VERSION_BETA > VERSION
      - name: Configure cmake
        run: |
          cmake -S . -B build/ -DVCPKG_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DVCPKG_TARGET_TRIPLET=x64-windows
      - name: Build cmake
        run: |
          cmake --build build/ --config ${{ env.BUILD_TYPE }}
      - name: Prepare windows installer
        run: |
          python collect_licenses.py
          mkdir installer
          cp resources/*.wav installer/
          cp resources/favicon.ico installer/
          cp resources/icon_win.png installer/
          cp resources/*.ttf installer/
          cp resources/airports.json installer/
          cp resources/LICENSE.txt installer/
          cp build/Release/vector_audio.exe installer/
          cp build/Release/*.dll installer/
          cp lib/windows/*.dll installer/
          cp bundle_windows.nsi installer/install.nsi
      - name: Create installer
        run: |
          cd installer/
          makensis install.nsi
      - name: Rename installer
        run: |
          mv installer/VectorAudio-installer.exe VectorAudio-${{ env.RELEASE_VERSION }}-Installer.exe
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: VectorAudio-${{ env.RELEASE_VERSION }}-Installer.exe
  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set env (release)
        if: github.event.release.prerelease == false
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Set env (pre-release)
        if: github.event.release.prerelease == true
        run: |
          echo "RELEASE_VERSION=v`cat VERSION_BETA`" >> $GITHUB_ENV
          cat VERSION_BETA > VERSION
      - name: Installing codesign certificates
        uses: apple-actions/import-codesign-certs@v2
        with: 
          p12-file-base64: ${{ secrets.APPLE_CERT_DATA }}
          p12-password: ${{ secrets.APPLE_CERT_PASSWORD }}
      - name: Install native dependencies
        run: |
          brew install pkg-config
      - name: Run build script
        run: |
          ./manual_osx_build.sh 1
          mv VectorAudio-Universal.dmg VectorAudio-${{ env.RELEASE_VERSION }}-Universal.dmg
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: VectorAudio-${{ env.RELEASE_VERSION }}-Universal.dmg
